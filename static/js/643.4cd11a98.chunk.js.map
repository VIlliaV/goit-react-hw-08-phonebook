{"version":3,"file":"static/js/643.4cd11a98.chunk.js","mappings":"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","sources":["components/Form/InputEmail.jsx","components/Form/InputName.jsx","components/Form/InputNumber.jsx","components/Form/InputPassword.jsx","pages/Register/Register.jsx","../node_modules/@mui/system/esm/Box/Box.js"],"sourcesContent":["import { TextField } from '@mui/material';\n\nconst InputEmail = ({ props }) => {\n  const { register, errors } = props;\n\n  return (\n    <TextField\n      sx={{\n        backgroundColor: `white`,\n      }}\n      label=\"Email\"\n      variant=\"outlined\"\n      {...register('email', {\n        required: true,\n        pattern: /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/i,\n      })}\n      error={Boolean(errors.email)}\n      helperText={errors.email && 'Enter a valid email address'}\n      placeholder={'email@example.com'}\n    />\n  );\n};\n\nexport default InputEmail;\n","import { TextField } from '@mui/material';\n\nconst InputName = ({ props }) => {\n  const { register, errors } = props;\n\n  return (\n    <TextField\n      sx={{\n        backgroundColor: `white`,\n      }}\n      label=\"Name\"\n      variant=\"outlined\"\n      {...register('name', { required: true })}\n      error={Boolean(errors.name)}\n      helperText={errors.name && 'Name is required'}\n      placeholder={'Bill Black'}\n    />\n  );\n};\n\nexport default InputName;\n","import { TextField } from '@mui/material';\n\nconst InputNumber = ({ props }) => {\n  const { register, errors } = props;\n\n  return (\n    <TextField\n      label=\"Number\"\n      variant=\"outlined\"\n      {...register('number', { required: true })}\n      error={Boolean(errors.number)}\n      helperText={errors.number && 'Number is required'}\n      placeholder={'0678833883'}\n    />\n  );\n};\n\nexport default InputNumber;\n","import { Visibility, VisibilityOff } from '@mui/icons-material';\nimport { IconButton, InputAdornment, TextField } from '@mui/material';\nimport { useState } from 'react';\n\nconst InputPassword = ({ props }) => {\n  const { register, errors } = props;\n\n  const [showPassword, setShowPassword] = useState(false);\n  const handleClickShowPassword = () => {\n    setShowPassword(show => !show);\n  };\n\n  return (\n    <TextField\n      sx={{\n        backgroundColor: 'rgba(250, 246, 246, 0.7)',\n        // backgroundColor: `white`,\n      }}\n      label=\"Password\"\n      variant=\"outlined\"\n      type={showPassword ? 'text' : 'password'}\n      {...register('password', {\n        required: true,\n        minLength: 7,\n      })}\n      error={Boolean(errors.password)}\n      helperText={\n        errors.password?.type === 'minLength'\n          ? 'Password must be at least 7 characters long'\n          : errors.password?.type === 'required'\n          ? 'Password is required'\n          : null\n      }\n      placeholder={'********'}\n      InputProps={{\n        endAdornment: (\n          <InputAdornment position=\"end\">\n            <IconButton\n              aria-label=\"toggle password visibility\"\n              onClick={handleClickShowPassword}\n              edge=\"end\"\n            >\n              {showPassword ? <VisibilityOff /> : <Visibility />}\n            </IconButton>\n          </InputAdornment>\n        ),\n      }}\n    />\n  );\n};\n\nexport default InputPassword;\n","import { useForm } from 'react-hook-form';\nimport { Button } from '@mui/material';\nimport { InputEmail, InputName, InputPassword } from 'components/Form';\nimport { useDispatch } from 'react-redux';\nimport { signUp } from 'redux/auth/authOperations';\nimport { styled, Box } from '@mui/system';\nimport Modal from '@mui/base/Modal';\nimport { forwardRef } from 'react';\nimport wood from '../../images/wood.jpg';\nimport { useNavigate } from 'react-router-dom';\n\nconst Register = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const handleClose = () => {\n    navigate('/');\n  };\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm();\n\n  const onSubmit = data => {\n    dispatch(signUp(data));\n  };\n\n  //   return (\n  //     <form onSubmit={handleSubmit(onSubmit)}>\n  //       <InputName props={{ register, errors }} />\n  //       <InputEmail props={{ register, errors }} />\n  //       <InputPassword props={{ register, errors }} />\n  //       <Button type=\"submit\" variant=\"contained\">\n  //         Submit\n  //       </Button>\n  //     </form>\n  //   );\n  // };\n\n  // export default Register;\n\n  return (\n    <div>\n      <StyledModal\n        aria-labelledby=\"unstyled-modal-title\"\n        aria-describedby=\"unstyled-modal-description\"\n        open=\"true\"\n        onClose={handleClose}\n        slots={{ backdrop: StyledBackdrop }}\n        sx={{\n          backgroundImage: `url(${wood})`,\n          backgroundSize: 'cover',\n          backgroundPosition: 'center 50%',\n        }}\n      >\n        <Box sx={style}>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <InputName props={{ register, errors }} />\n            <InputEmail props={{ register, errors }} />\n            <InputPassword props={{ register, errors }} />\n            <Button type=\"submit\" variant=\"contained\">\n              Submit\n            </Button>\n          </form>\n        </Box>\n      </StyledModal>\n    </div>\n  );\n};\n\nconst Backdrop = forwardRef(function Backdrop(props, ref) {\n  const { className, ...other } = props;\n  return (\n    <div className={` 'MuiBackdrop-open'  ${className}`} ref={ref} {...other} />\n  );\n});\n\nconst StyledModal = styled(Modal)({\n  position: 'fixed',\n  // zIndex: 1300,\n  right: 0,\n  bottom: 0,\n  top: 0,\n  left: 0,\n\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n});\n\nconst StyledBackdrop = styled(Backdrop)({\n  zIndex: -1,\n  position: 'fixed',\n  right: 0,\n  bottom: 0,\n  top: 0,\n  left: 0,\n\n  backgroundColor: 'rgba(0, 0, 0, 0.5)',\n  WebkitTapHighlightColor: 'transparent',\n});\n\nconst style = theme => ({\n  width: 400,\n  backgroundImage: `url(${wood})`,\n  backgroundSize: 'cover',\n  backgroundPosition: 'center 50%',\n  bgcolor: theme.palette.mode === 'dark' ? '#0A1929' : 'white',\n  border: '2px solid black',\n  padding: '16px 32px 24px 32px',\n});\n\nexport default Register;\n","import PropTypes from 'prop-types';\nimport createBox from '../createBox';\nconst Box = createBox();\nprocess.env.NODE_ENV !== \"production\" ? Box.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Box;"],"names":["props","register","errors","TextField","sx","backgroundColor","label","variant","required","pattern","error","Boolean","email","helperText","placeholder","name","number","useState","showPassword","setShowPassword","type","minLength","password","InputProps","endAdornment","InputAdornment","position","IconButton","onClick","show","edge","VisibilityOff","Visibility","Backdrop","forwardRef","ref","className","other","StyledModal","styled","Modal","right","bottom","top","left","display","alignItems","justifyContent","StyledBackdrop","zIndex","WebkitTapHighlightColor","style","theme","width","backgroundImage","wood","backgroundSize","backgroundPosition","bgcolor","palette","mode","border","padding","dispatch","useDispatch","navigate","useNavigate","useForm","handleSubmit","formState","open","onClose","slots","backdrop","onSubmit","data","signUp","Box","createBox"],"sourceRoot":""}