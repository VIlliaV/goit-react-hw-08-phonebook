{"version":3,"file":"static/js/937.18f53029.chunk.js","mappings":"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","sources":["components/Form/InputEmail.jsx","components/Form/InputName.jsx","components/Form/InputNumber.jsx","components/Form/InputPassword.jsx","redux/contacts/contactsSelectors.js","components/Contacts/ContactForm/ContactForm.styled.js","components/Contacts/ContactForm/ContactForm.jsx","components/Contacts/ContactItem/ContactItem.styled.js","components/Contacts/ContactItem/ContactItem.jsx","components/Loader/Loader.jsx","components/Contacts/ContactList/ContactList.jsx","components/Contacts/Filter/Filter.styled.js","components/Contacts/Filter/Filter.jsx","pages/Phonebook/Phonebook.jsx"],"sourcesContent":["import { TextField } from '@mui/material';\n\nconst InputEmail = ({ props }) => {\n  const { register, errors } = props;\n\n  return (\n    <TextField\n      label=\"Email\"\n      variant=\"outlined\"\n      {...register('email', {\n        required: true,\n        pattern: /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/i,\n      })}\n      error={Boolean(errors.email)}\n      helperText={errors.email && 'Enter a valid email address'}\n      placeholder={'email@example.com'}\n    />\n  );\n};\n\nexport default InputEmail;\n","import { TextField } from '@mui/material';\n\nconst InputName = ({ props }) => {\n  const { register, errors } = props;\n\n  return (\n    <TextField\n      label=\"Name\"\n      variant=\"outlined\"\n      {...register('name', { required: true })}\n      error={Boolean(errors.name)}\n      helperText={errors.name && 'Name is required'}\n      placeholder={'Bill Black'}\n    />\n  );\n};\n\nexport default InputName;\n","import { TextField } from '@mui/material';\n\nconst InputNumber = ({ props }) => {\n  const { register, errors } = props;\n\n  return (\n    <TextField\n      label=\"Number\"\n      variant=\"outlined\"\n      {...register('number', { required: true })}\n      error={Boolean(errors.number)}\n      helperText={errors.number && 'Number is required'}\n      placeholder={'0678833883'}\n    />\n  );\n};\n\nexport default InputNumber;\n","import { Visibility, VisibilityOff } from '@mui/icons-material';\nimport { IconButton, InputAdornment, TextField } from '@mui/material';\nimport { useState } from 'react';\n\nconst InputPassword = ({ props }) => {\n  const { register, errors } = props;\n\n  const [showPassword, setShowPassword] = useState(false);\n  const handleClickShowPassword = () => {\n    setShowPassword(show => !show);\n  };\n  return (\n    <TextField\n      label=\"Password\"\n      variant=\"outlined\"\n      type={showPassword ? 'text' : 'password'}\n      {...register('password', { required: true })}\n      error={Boolean(errors.password)}\n      helperText={errors.password && 'Password is required'}\n      placeholder={'********'}\n      InputProps={{\n        endAdornment: (\n          <InputAdornment position=\"end\">\n            <IconButton\n              aria-label=\"toggle password visibility\"\n              onClick={handleClickShowPassword}\n              edge=\"end\"\n            >\n              {showPassword ? <VisibilityOff /> : <Visibility />}\n            </IconButton>\n          </InputAdornment>\n        ),\n      }}\n    />\n  );\n};\n\nexport default InputPassword;\n","import { createSelector } from '@reduxjs/toolkit';\nimport { selectFilter } from 'redux/filterSlice';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilterContacts = createSelector(\n  [selectFilter, selectContacts],\n  (filter, contacts) =>\n    contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    )\n);\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  width: 200px;\n  padding: 7px;\n  margin-bottom: 25px;\n  font-size: 18px;\n  border: 1px solid black;\n  border-radius: 8px;\n  box-shadow: 5px 5px 10px rgb(101, 101, 101, 0.5);\n  /* & p {\n    font-weight: 500;\n    margin-bottom: 5px;\n  } */\n  /* & input {\n    margin-bottom: 15px;\n    border-radius: 8px;\n    box-shadow: 5px 5px 10px rgb(101, 101, 101, 0.5);\n  } */\n  /* & button {\n    padding: 5px 10px;\n    border-radius: 8px;\n    box-shadow: 5px 5px 10px rgb(101, 101, 101, 0.5);\n    cursor: pointer;\n    &:hover {\n      background-color: rgb(101, 101, 101, 0.5);\n    }\n  } */\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport toast from 'react-hot-toast';\n\nimport { addContact } from 'redux/contacts/contactsOperations';\nimport { selectContacts } from 'redux/contacts/contactsSelectors';\n\nimport { Form } from './ContactForm.styled';\n\nimport { useForm } from 'react-hook-form';\n\nimport { Button } from '@mui/material';\nimport { InputName, InputNumber } from 'components/Form';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm();\n\n  const addNewUser = data => {\n    const { name, number } = data;\n    if (contacts.find(option => option.name === name)) {\n      toast.error(`${name} already in contact`);\n    } else {\n      toast.success('contact is added');\n      const newUser = {\n        name,\n        number,\n      };\n      dispatch(addContact(newUser));\n    }\n  };\n\n  return (\n    <Form onSubmit={handleSubmit(addNewUser)}>\n      <InputName props={{ register, errors }} />\n      <InputNumber props={{ register, errors }} />\n      <Button type=\"submit\" variant=\"contained\">\n        add contact\n      </Button>\n    </Form>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  display: flex;\n  position: relative;\n  align-items: baseline;\n  margin-bottom: 5px;\n  padding: 2px;\n  font-size: 16px;\n  transition: opacity 0.5s ease-out, transform 0.5s ease-out;\n  &:hover {\n    border: 1px solid black;\n    border-radius: 5px;\n    padding: 1px;\n    box-shadow: 5px 5px 10px rgb(101, 101, 101, 0.5);\n  }\n  & .date {\n    position: absolute;\n    width: 250px;\n    top: 50%;\n    left: -30%;\n    transform: translate(-50%, -50%);\n    border: 1px solid black;\n    border-radius: 5px;\n    /* background-color: white; */\n  }\n  &.delete {\n    opacity: 0;\n    transform: translateX(-100%);\n  }\n  & p {\n    margin: 0px 10px 5px;\n  }\n  & .name {\n    width: 200px;\n    font-size: 18px;\n    font-weight: 500;\n  }\n  & .circle {\n    background-color: black;\n    width: 10px;\n    height: 10px;\n    border-radius: 50%;\n    box-shadow: 2px 2px 3px rgba(0, 0, 0, 0.5);\n  }\n  & button {\n    padding: 5px 10px;\n    border-radius: 8px;\n    box-shadow: 5px 5px 10px rgb(101, 101, 101, 0.5);\n    cursor: pointer;\n    &:hover {\n      background-color: rgb(101, 101, 101, 0.5);\n    }\n  }\n`;\n","import PropTypes from 'prop-types';\n\nimport { useRef } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { deleteContact } from 'redux/contacts/contactsOperations';\n\nimport { Item } from './ContactItem.styled';\n\nexport const ContactItem = ({ contact }) => {\n  const del = useRef();\n\n  const dispatch = useDispatch();\n\n  const deleteItem = id => {\n    del.current.className += ' delete';\n    console.log('knopka');\n    dispatch(deleteContact(id));\n  };\n\n  const { id, name, number } = contact;\n\n  return (\n    <Item ref={del}>\n      <span className=\"circle\"></span>\n      <p className=\"name\">{name}:</p>\n      <p> {number}</p>\n      <button\n        onClick={() => {\n          deleteItem(id);\n        }}\n      >\n        Delete\n      </button>\n    </Item>\n  );\n};\n\nContactItem.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import { Triangle } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <Triangle\n      height=\"60\"\n      width=\"60\"\n      color=\"rgb(115, 216, 103)\"\n      ariaLabel=\"triangle-loading\"\n      wrapperStyle={{}}\n      wrapperClassName=\"\"\n      visible={true}\n    />\n  );\n};\n","import { useEffect } from 'react';\nimport { toast } from 'react-hot-toast';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport {\n  selectError,\n  selectFilterContacts,\n  selectIsLoading,\n} from 'redux/contacts/contactsSelectors';\nimport { fetchContacts } from 'redux/contacts/contactsOperations';\n\nimport { Loader } from 'components/Loader/Loader';\nimport { ContactItem } from '..';\n\nexport const ContactList = () => {\n  const error = useSelector(selectError);\n  const loading = useSelector(selectIsLoading);\n  const filterContacts = useSelector(selectFilterContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (error !== null) {\n      toast.error(`Sorry, but ${error} `);\n      return;\n    }\n  }, [error]);\n\n  return (\n    <>\n      {filterContacts.length !== 0 ? (\n        <ul>\n          {filterContacts.map(({ id, name, number }) => (\n            <ContactItem key={id} contact={{ id, name, number }} />\n          ))}\n        </ul>\n      ) : (\n        <p>Please add contact</p>\n      )}\n      {loading && <Loader />}\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 300px;\n  padding: 7px;\n  margin-bottom: 25px;\n  font-size: 18px;\n  border: 1px solid black;\n  border-radius: 8px;\n  box-shadow: 5px 5px 10px rgb(101, 101, 101, 0.5);\n  & h3 {\n    font-weight: 500;\n    margin-bottom: 5px;\n  }\n  & input {\n    margin-bottom: 15px;\n    border-radius: 8px;\n    box-shadow: 5px 5px 10px rgb(101, 101, 101, 0.5);\n  }\n`;\n","import { Container } from './Filter.styled';\nimport { setFilter } from 'redux/filterSlice';\nimport { useDispatch } from 'react-redux';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const handleFilter = ({ target: { value } }) => {\n    dispatch(setFilter(value));\n  };\n  return (\n    <Container>\n      <h3>Find contacts by name</h3>\n      <input onChange={handleFilter} type=\"text\" name=\"filter\" />\n    </Container>\n  );\n};\n","import { ContactForm, ContactList, Filter } from 'components/Contacts';\n\nconst Phonebook = () => {\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n};\n\nexport default Phonebook;\n"],"names":["props","register","errors","TextField","label","variant","required","pattern","error","Boolean","email","helperText","placeholder","name","number","useState","showPassword","setShowPassword","type","password","InputProps","endAdornment","InputAdornment","position","IconButton","onClick","show","edge","VisibilityOff","Visibility","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","selectFilterContacts","createSelector","selectFilter","filter","contact","toLowerCase","includes","Form","styled","ContactForm","dispatch","useDispatch","useSelector","useForm","handleSubmit","formState","onSubmit","data","find","option","toast","newUser","addContact","Button","Item","ContactItem","del","useRef","id","ref","className","current","console","log","deleteContact","deleteItem","Loader","height","width","color","ariaLabel","wrapperStyle","wrapperClassName","visible","ContactList","loading","filterContacts","useEffect","fetchContacts","length","map","Container","Filter","onChange","value","target","setFilter"],"sourceRoot":""}